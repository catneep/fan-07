@page "/hub/productos/registro"
@page "/hub/productos/{id}"
@page "/hub/productos/{id}/edit"
@inject NavigationManager NavMgr
@inject IProductService PrdtSrv

<main>
  <div class="level">
    <h1 class="title level-item">Productos</h1>
  </div>
  <div class="columns">
    <div class="column is-2"></div>
    <div class="column">
      <FormProducto @ref="form" _Exists="@edit" Producto="@producto" OnValid="ValidSubmit" />
    </div>
    <div class="column is-2"></div>
  </div>
</main>

@code{
  [Parameter] public string id {get; set;}
  private FormProducto form;
  private Producto producto;
  private bool edit;
  private async Task ValidSubmit()
  {
    Console.WriteLine($"Product form submitted");
    await PrdtSrv.Register(producto);
  }
  protected async override Task OnParametersSetAsync()
  {
    if (id != null && id != String.Empty && id != "registro")
    {
      producto = await PrdtSrv.GetById(id);
      edit = !(producto != null && NavMgr.Uri.ToString().Contains("/edit"));
    }
    else
      producto = new Producto();
  }
}