@page "/hub"
@inherits AuthenticatedComponent

@inject ICategoryService CatSrv
@inject IProductService ProdSrv
@inject IMailingService MailSrv
@inject IAdminService AdminSrv

@inject NavigationManager NavMgr

<section class="hero is-halfheight">
  <div class="hero-body">
    <div>
      <p class="title">
        Administración Fan-07
      </p>
    </div>
  </div>
</section>

<h1 class="title">Categorias</h1>
<TableCategorias Categorias="@Categorias" DeleteHandler="DeleteCategory" />
<a class="button is-primary" href="/hub/categorias/registro">
  Agregar
</a>

<h1 class="title">Productos</h1>
<TableProductos Productos="@Productos" DeleteHandler="DeleteProduct" />
<a class="button is-primary" href="/hub/productos/registro">
  Agregar
</a>

<h1 class="title">Pedidos</h1>
<TablePedidos Pedidos="@Pedidos" DeleteHandler="DeletePedido" />
<a class="button is-primary" href="/hub/pedidos/registro">
  Agregar
</a>

<h1 class="title">Distribuidores</h1>
<!--TODO-->

<Embers.Bulma.Modal @ref="deleteDialog">
  <div class="box content has-text-centered">
    <h1>Advertencia</h1>
    <p>¿Estás seguro que deseas eliminar este elemento?</p>

    <div class="buttons">
      <button class="button is-info" @onclick="Cancel">
        Cancelar
      </button>
      <button class="button is-danger" @onclick="() => ConfirmDelete()">
        Continuar
      </button>
    </div>
  </div>
</Embers.Bulma.Modal>

@code{
  private Dropdown option;
  private Modal deleteDialog;
  private List<Categoria> Categorias;
  private List<Producto> Productos;
  private List<Distribuidor> Distribuidores;
  private List<Pedido> Pedidos;
  private Producto productoTemp;
  private Categoria categoriaTemp;
  private Distribuidor distTemp;
  private Pedido pedidoTemp;
  private void Cancel()
  {
    categoriaTemp = null;
    productoTemp = null;
    distTemp = null;
    deleteDialog.makeVisible();
  }
  private async Task ConfirmDelete()
  {
    if (productoTemp != null)
      await ProdSrv.Delete(productoTemp);
    if (categoriaTemp != null)
      await CatSrv.DeleteCategory(categoriaTemp);
    if (pedidoTemp != null)
      await MailSrv.Delete(pedidoTemp);
    
    NavMgr.NavigateTo("/hub", true);
  }
  private void DeleteProduct(Producto p)
  {
    productoTemp = p;
    deleteDialog.makeVisible();
  }
  private void DeleteCategory(Categoria p)
  {
    categoriaTemp = p;
    deleteDialog.makeVisible();
  }
  private void DeletePedido(Pedido p)
  {
    pedidoTemp = p;
    deleteDialog.makeVisible();
  }
  protected async override Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();

    if (_currentUser == null)
      NavMgr.NavigateTo("/404", true);

    var c = await CatSrv.GetCategories();
    Categorias = c.ToList();

    var p = await ProdSrv.GetAll();
    Productos = p.ToList();

    var pd = await MailSrv.GetPedidos();
    Pedidos = pd.ToList();

    var d = await MailSrv.GetDistribuidores();
    Distribuidores = d.ToList();
  }
}