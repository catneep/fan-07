@page "/hub/categorias/registro"
@page "/hub/categorias/{id}"
@page "/hub/categorias/{id}/edit"
@inject NavigationManager NavMgr
@inject ICategoryService CatSrv



<main>
    <div class="main_content">      
      <div class="container">
        <h1 class="title" style="text-align: center;">Agregar Categor√≠a</h1>
        <FormCategoria @ref="categoria" Categoria="_Categoria" OnValid="() => Test()" />        
      </div>      
    </div>  
</main>

@code{
  [Parameter] public string id {get; set;}
  private bool _Exists = false;
  private Categoria _Categoria;
  private List<Subcategoria> _Subcategorias;
  private FormCategoria categoria;
  protected override void OnInitialized()
  {
    _Exists = (id != null && id != String.Empty);
  }
  protected async override Task OnParametersSetAsync()
  {
    if (_Exists){
      _Categoria = await CatSrv.GetCategory(id);
      if (_Categoria != null)
      {
        var s = await CatSrv.GetSubcategories(_Categoria);
        //var s = _Categoria.Subcategorias;
        if (s != null && s.Count > 0)
          _Subcategorias = s.ToList();    
        else
          _Subcategorias = new List<Subcategoria>();
      }
      _Categoria.Subcategorias = _Subcategorias;      
    } else {
      _Categoria = new Categoria();
      _Subcategorias = new List<Subcategoria>();
      _Categoria.Subcategorias = _Subcategorias;      
    }    
    //categoria._Exists = !(_Categoria != null && NavMgr.Uri.ToString().Contains("edit"));        
  }
  private async Task Test()
  {
    Console.WriteLine($"It was valid!\nRegistering...");
    await CatSrv.CreateCategory(categoria.Categoria);
    NavMgr.NavigateTo("/hub");
  }
}