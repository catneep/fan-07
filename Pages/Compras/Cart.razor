@page "/carrito"
@inject ICartService CartSrv

<main>
  @if (CartSrv.Productos.Count > 0) foreach (var item in Productos)
  {
    <div class="columns">
      <div class="column is-2"></div>
      <div class="column is-centered">
        <CartTable Rows="@display"/>
      </div>
      <div class="column is-2"></div>
    </div>
  }
  else
  {
    <p>Tu Carrito está vacío</p>
  }
</main>

@code{
  public List<CartItem> Productos { get; set; }
  private List<string[]> display;
  private string formatDecimal(decimal d)
  {
    int enteros = ((int)Math.Floor(((double)d)));
    int decimales = (int) (((double) d ) * 100 - enteros * 100);
    return $"{enteros}.{decimales}";
  }
  protected async override Task OnInitializedAsync()
  {
    Console.WriteLine($"Count: {CartSrv.Productos.Count}");
    Productos = CartSrv.Productos;
    
    if (Productos != null && Productos.Count > 0)
    {
      display = new List<string[]>();
      foreach (var p in Productos)
      {
        display.Add(
          new string[]
          {
            $"{p.Producto.Imagenes.ToList()[0].Imagen}",
            $"{p.Producto.Nombre}",
            $"{p.Cantidad}",
            $"{formatDecimal(p.Producto.Precio)}",
            $"{formatDecimal(p.Cantidad * p.Producto.Precio)}"
          }
        );
      }
    }
  }

}