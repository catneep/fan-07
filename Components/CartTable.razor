<table class="table is-striped is-narrow is-hoverable is-fullwidth">
  <thead>
    <tr>
      <th class="img-cell"><!-- imagen --></th>
      <th>Nombre</th>
      <th><abbr title="Cantidad">Cant.</abbr></th>
      <th>Precio</th>
      <th>Subtotal</th>
      <th>Acciones</th>
    </tr>
  </thead>
  <tbody>
    @for (int i = 0; i < Rows.Count; i++)
    {
      var index = i;
      <tr>
        <td>
          <figure class="image is-96x96">
            <img src="@Rows[index][0]">
          </figure>
        </td>
        <td>
          @Rows[index][1]
        </td>
        <td>
          @Rows[index][2]
        </td>
        <td>
          $ @Rows[index][3]
        </td>
        <td>
          $ @Rows[index][4]
        </td>
        <td>
          <div class="buttons">
            <button class="button is-info is-inverted" @onclick="() => _Minus(index)">
              -
            </button>
            <button class="button is-info is-inverted" @onclick="() => _Plus(index)">
              +
            </button>
            <button class="button is-danger is-small" @onclick="() => _Delete(index)">
              <span class="oi" data-glyph="trash" />
              Eliminar
            </button>
          </div>
        </td>
      </tr>
    }
  </tbody>
</table>

@code{
  [Parameter] public List<string[]> Rows {get; set;}
  [Parameter] public EventCallback<int> Minus {get; set;}
  [Parameter] public EventCallback<int> Plus {get; set;}
  [Parameter] public EventCallback<int> Delete {get; set;}
  private async void _Minus(int i)
  {
    await Minus.InvokeAsync(i);
  }
  private async void _Plus(int i)
  {
    await Plus.InvokeAsync(i);
  }
  private async void _Delete(int i)
  {
    await Delete.InvokeAsync(i);
  }
  
}